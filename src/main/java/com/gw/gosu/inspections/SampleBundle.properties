
comments.group.name = Gosu Commenting Conventions
layout.group.name = Gosu Layout Conventions
naminganddeclarations.group.name = Gosu Naming Conventions
potentialbugs.group.name = Gosu Potential Bugs
ukrules.group.name = UK Rules




# Inspections #


############
# Comments #
############

comments.name.trailingcomments = Keep trailing comments aligned to the same column
comments.name.blockcomments = Use a block comment only for multiple-line comments
comments.name.javadoccomments = Missing Javadoc comment '/**'
comments.name.gosudoccomments = Missing Gosudoc comment '/**'
comments.name.singlelinecomments = Use a block comment instead of many single line comments


############
#  Layout  #
############

layout.name.indent = Indentation is incorrect
layout.name.curlybrackets = Curly brackets should be used to indicate nesting
layout.name.semicolon = Semicolon is not necessary here

//TODO: Make 2 descriptions. One for when the code style value is true, and another when false
layout.name.whitespacebeforerightparenthese = Apply Code Style Settings before left parenthesis
layout.name.whitespacewithinparentheses = Apply Code Style Settings within parentheses
layout.name.whitespacearoundoperators = Apply Code Style Settings around operators
layout.name.linetoolong = Line is too long ({0}/{1} characters)
layout.inspection.linetoolong = Maximum line length

#Brackets layout
layout.name.bracketslayout = Curly Braces should match your intellij codestyle settings
layout.name.bracketslayout.left = Open brace should be on the same line
layout.name.bracketslayout.left.space = Open brace should be on the same line with preceding space
layout.name.bracketslayout.right = Closing brace should be on its own line


##########################
# Naming And Declarations#
##########################

naminganddeclarations.name.classNames = Name classes in mixed case, with an initial upper case and medial capitals for each internal word
naminganddeclarations.name.publicvarasproperty = Guidewire strongly recommends public properties backed by private variables instead of public variables
naminganddeclarations.name.singlelettervarname = One-character variable names should be avoided
naminganddeclarations.name.reservedkeywordinvar = Keyword 'native' is reserved
naminganddeclarations.name.privatevarnameformat = Private variable names should begin with an underscore
naminganddeclarations.name.publicvarnameformat = Public variable names should begin with an uppercase letter
naminganddeclarations.name.exceptiontype = The type of 'Exception' is already inferred...


##################
# Potential Bugs #
##################

potentialbugs.name.else = Empty else statement
potentialbugs.name.if = Empty if statement
potentialbugs.name.uninitializedvariables = Uninitialized variables
potentialbugs.message.uninitializedvariables = Var "{0}" might not be initialized
potentialbugs.name.unusedloopvariable = Loop variable is unused
potentialbugs.name.emptyloopbody = Empty loop body
potentialbugs.name.mutablestatic = Static collection
potentialbugs.message.mutablestatic = Avoid static collection fields


##################
#    UK  Rules   #
##################

aviva.ukrule.wherefirst = Misuse of collections.where(cond).first()
aviva.ukrule.wheresingle = Misuse of collections.where(cond).single()
aviva.ukrule.wherehaselements = Misuse of collections.where(cond).HasElements()
aviva.ukrule.wherecount = Misuse of collections.where(cond).Count
aviva.ukrule.wheretypeiscount = Misuse of collections.whereTypeIs(type).Count
aviva.ukrule.wheretypeishaselements = Misuse of collections.whereTypeIs(type).HasElements


# Quick Fixes #


############
# Comments #
############

comments.fix.tooltip.blockcomments = Refactor into single line comment
comments.fix.tooltip.gosudoccomments = Add Gosudoc comment
comments.fix.tooltip.javadoccomments = Add Javadoc comments
comments.fix.tooltip.singlelinecomments = Convert to block comment
comments.fix.tooltip.trailingcomments = Auto-align to column


############
#  Layout  #
############

layout.fix.tooltip.indentation = Align indentation
layout.fix.tooltip.semicolon = Remove semicolons
layout.fix.tooltip.whitespacebeforeleftparenthesis = Apply Code Style Settings before left parenthesis
layout.fix.tooltip.whiteSpacewithinparentheses = Apply Code Style Settings within parentheses
layout.fix.tooltip.whitespacearoundoperators = Apply Code Style Settings around operators
layout.fix.tooltip.whitespacebeforeternaryoperators = Apply Code Style Settings before ternary operators
layout.fix.tooltip.whitespaceafterternaryoperators = Apply Code Style Settings after ternary operators
layout.fix.tooltip.bracketslayout.left = Refactor left curly brace
layout.fix.tooltip.bracketslayout.right = Refactor right curly brace
layout.fix.tooltip.curlybrackets = Insert curly brackets


##########################
# Naming And Declarations#
##########################

naminganddeclarations.fix.tooltip.classnameformat = Refactor class name to
naminganddeclarations.fix.tooltip.inferexceptiontype = Remove the type definition
naminganddeclarations.fix.tooltip.publicvarasproperty = Convert to public var with a property
naminganddeclarations.fix.tooltip.functionandpropertynamecapitalization = Ensure correct capitalization of function and property names
naminganddeclarations.fix.tooltip.functionnamelowercase = Change first letter of the function name to lowercase
naminganddeclarations.fix.tooltip.propertynameuppercase = Change first letter of the property name to uppercase
naminganddeclarations.fix.tooltip.privatevarnameformat = Add an underscore in front of the private var name
naminganddeclarations.fix.tooltip.publicvarnameformat = Change first letter of the variable name to uppercase
naminganddeclarations.fix.tooltip.singlelettervarnameformat = Rename {0}...

##################
# Potential Bugs #
##################

potentialbugs.fix.tooltip.emptyelse = Delete else statement
potentialbugs.fix.tooltip.emptyifwithelse = Refactor to if statement with negated condition
potentialbugs.fix.tooltip.uninitializedvariables = Intialize {0} with a default value
potentialbugs.fix.tooltip.unusedloopvariable = Remove variable declaration


######################
# GW Services  Rules #
######################
gwservices.pcf.group.name= PCF
gwservices.entity.group.name= Entity
gwservices.pcf.postonchange= Check for postonchange
gwservices.pcf.complexvisibleavailable= Check for complex visible/availbe conditions
gwservices.entity.entityname= Check for entities
gwservices.gosu.group.name=gosu
gwservices.gosu.newdate=New Date()
gwservices.gosu.cyclomatic=Cyclomatic Complexity
gwservices.pcf.hardcodedlabel=Hardcoded Labels in PCF
gwservices.gosu.selecttocollection=Use of select().toCollection()
gwservices.gosu.countwhere=Use of countWhere()